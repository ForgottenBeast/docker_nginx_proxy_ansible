- name: "Create proxy_net"
  tags: nginx_deploy
  become: True
  docker_network:
    name: proxy_net

- name: "Create dest folder"
  tags: 
    - nginx_deploy
  file:
    state: directory
    name: "/tmp/nginxproxy"

- name: "Create nginx template file location"
  become: True
  tags:
    - nginx_deploy
  file:
    state: directory
    name: "{{nginx_tmpl_location}}"

- name: "Creating a tor hidden service private key if there is none..."
  include: gen_rsa.yml
  tags: nginx_deploy
  when: tor_hidden_service_private_key == None and
        TOR_HH == True

- name: "Write docker-compose"
  tags: 
    - nginx_deploy
  template:
    src: docker-compose.j2
    dest: /tmp/nginxproxy/docker-compose.yml

- name: "Write nginx.tmpl"
  copy:
    src: nginx.tmpl
    dest: "{{nginx_tmpl_location}}/nginx.tmpl"

- name: "Deploy nginx proxy"
  become: True
  tags: 
    - nginx_deploy
  docker_service:
    state: present
    project_src: /tmp/nginxproxy

- name: "Get log file location"
  become: True
  command: docker inspect -f {{.LogPath}} nginx
  register: log_loc

- name: "Create symlink to logfile"
  become: True
  command: "ln -s {{log_loc.stdout}} {{nginx_logs_location}}"

- name: "add upload size directives"
  tags: nginx_deploy
  command: |
    docker exec nginxproxy_nginx_1 bash -c 'echo "server_tokens off;" >> /etc/nginx/conf.d/default.conf'
    docker exec nginxproxy_nginx_1 bash -c 'echo "client_max_body_size 100m;" >> /etc/nginx/conf.d/default.conf'

- name: "Waiting for tor container to come up..."
  tags: nginx_deploy
  when: TOR_HH == True
  pause:
    seconds: 10

- name: "Getting onion url..."
  tags: nginx_deploy
  become: True
  command: docker exec -i nginxproxy_torhh_1 onions
  register: onions
  when: TOR_HH == True

- debug:
    msg: "Onion url: {{ onions.stdout }}"
  when: TOR_HH == True
  tags: nginx_deploy

- name: "Remove docker-compose folder"
  become: True
  tags:
    - nginx_deploy
  file:
    name: /tmp/nginxproxy
    state: absent

- include: firewall.yml
  become: True
  tags: firewall
  when: CLOUDFLARE == True

- name: "Pause on cloudflare"
  become: True
  when: CLOUDFLARE == True
  tags: renew
  pause:
    prompt: |
      "Before renewing your certificate, please pause your website on cloudflare so letsencrypt
      can reach it."

- name: "start cert renewal procedure"
  include: renew.yml
  become: True
  tags: renew

